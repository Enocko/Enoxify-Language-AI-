from fastapi import FastAPI, HTTPException
from fastapi.middleware.cors import CORSMiddleware
import uvicorn
import os
from dotenv import load_dotenv
import asyncio
import re
from pydantic import BaseModel

class TextSimplificationRequest(BaseModel):
    text: str
    target_level: str = "medium"
    preserve_meaning: bool = True

class TextSimplificationResponse(BaseModel):
    original_text: str
    simplified_text: str
    readability_score: float
    success: bool
    error_message: str = None

class FluentTextSimplifier:
    def __init__(self):
        # Comprehensive vocabulary replacements for different levels
        self.vocabulary_map = {
            "elementary": {
                "artificial intelligence": "computer thinking",
                "branch": "part",
                "computer science": "computer study",
                "focuses on": "works on",
                "creating": "making",
                "machines": "computers",
                "capable of": "able to",
                "performing": "doing",
                "tasks": "jobs",
                "normally": "usually",
                "require": "need",
                "human intelligence": "human thinking",
                "understanding": "knowing",
                "recognizing": "seeing",
                "patterns": "shapes",
                "solving": "fixing",
                "problems": "troubles",
                "making decisions": "choosing",
                "recent years": "lately",
                "advances": "improvements",
                "led to": "caused",
                "breakthroughs": "big discoveries",
                "healthcare": "health care",
                "education": "learning",
                "transportation": "moving around",
                "fields": "areas",
                "powerful": "strong",
                "tool": "helper",
                "shaping": "changing",
                "future": "what comes next",
                "diagnosis": "finding problems",
                "fix path": "solution steps",
                "code snippet": "small code example",
                "API call": "program request",
                "web builder": "website maker",
                "plug in": "add",
                "almost impossible": "very hard",
                "fail": "not work",
                "working": "good",
                "utilize": "use",
                "facilitate": "help",
                "implement": "do",
                "methodology": "method",
                "subsequently": "then",
                "consequently": "so",
                "nevertheless": "but",
                "furthermore": "also",
                "moreover": "also",
                "additionally": "also",
                "previously": "before",
                "approximately": "about",
                "demonstrate": "show",
                "indicate": "show",
                "illustrate": "show",
                "establish": "make",
                "maintain": "keep",
                "obtain": "get",
                "acquire": "get",
                "comprehend": "understand",
                "perceive": "see",
                "observe": "see",
                "examine": "look at",
                "investigate": "look into",
                "analyze": "study",
                "evaluate": "check",
                "assess": "check",
                "determine": "find out",
                "identify": "find",
                "recognize": "know",
                "acknowledge": "know",
                "appreciate": "like",
                "conceptualize": "think",
                "contemplate": "think about",
                "deliberate": "think about",
                "formulate": "make",
                "generate": "make",
                "initiate": "start",
                "originate": "start",
                "proceed": "go on",
                "terminate": "end",
                "conclude": "end",
                "finalize": "finish",
                "accomplish": "do",
                "achieve": "do",
                "attain": "get to",
                "secure": "get",
                "procure": "get",
                "retrieve": "get back",
                "accumulate": "gather",
                "assemble": "put together",
                "compile": "put together",
                "consolidate": "put together",
                "integrate": "put together",
                "synthesize": "put together",
                "coordinate": "organize",
                "orchestrate": "organize",
                "administer": "manage",
                "supervise": "watch over",
                "monitor": "watch",
                "regulate": "control",
                "moderate": "control",
                "optimize": "make better",
                "enhance": "make better",
                "improve": "make better",
                "augment": "add to",
                "supplement": "add to",
                "complement": "go with",
                "correspond": "match",
                "coincide": "match",
                "correlate": "go together",
                "interrelate": "go together",
                "interconnect": "connect",
                "synchronize": "time together",
                "harmonize": "go together",
                "reconcile": "make agree",
                "mediate": "help agree",
                "negotiate": "talk about",
                "collaborate": "work together",
                "cooperate": "work together",
                "participate": "take part",
                "contribute": "help",
                "enable": "let",
                "empower": "let",
                "authorize": "let",
                "sanction": "allow",
                "endorse": "support",
                "advocate": "support",
                "promote": "support",
                "encourage": "support",
                "motivate": "push",
                "inspire": "push",
                "stimulate": "push",
                "provoke": "cause",
                "elicit": "get",
                "extract": "get",
                "derive": "get",
                "deduce": "figure out",
                "infer": "figure out",
                "postulate": "guess",
                "hypothesize": "guess",
                "speculate": "guess",
                "anticipate": "expect",
                "foresee": "see coming",
                "predict": "guess",
                "project": "guess",
                "estimate": "guess",
                "calculate": "figure out",
                "compute": "figure out",
                "ascertain": "find out",
                "verify": "check",
                "validate": "check",
                "confirm": "check",
                "substantiate": "prove",
                "corroborate": "prove",
                "authenticate": "prove real",
                "certify": "prove",
                "legitimize": "make legal",
                "institutionalize": "make official",
                "standardize": "make the same",
                "normalize": "make normal",
                "stabilize": "make steady",
                "streamline": "make smooth",
                "simplify": "make simple",
                "clarify": "make clear",
                "elucidate": "make clear",
                "illuminate": "make clear",
                "elaborate": "explain more",
                "expound": "explain more",
                "articulate": "say clearly",
                "verbalize": "say",
                "communicate": "tell",
                "convey": "tell",
                "transmit": "send",
                "disseminate": "spread",
                "propagate": "spread",
                "circulate": "spread",
                "distribute": "give out",
                "allocate": "give",
                "assign": "give",
                "designate": "pick",
                "nominate": "pick",
                "appoint": "pick",
                "label": "name",
                "categorize": "sort",
                "classify": "sort",
                "organize": "sort",
                "arrange": "put in order",
                "sequence": "put in order",
                "prioritize": "put first",
                "rank": "put in order",
                "evaluate": "judge",
                "assess": "judge",
                "appraise": "judge",
                "review": "look at",
                "scrutinize": "look closely",
                "explore": "look into",
                "research": "study",
                "study": "learn about",
                "inspect": "look at",
                "track": "follow",
                "trace": "follow",
                "pursue": "go after",
                "seek": "look for",
                "search": "look for",
                "discover": "find",
                "uncover": "find",
                "reveal": "show",
                "expose": "show",
                "disclose": "tell",
                "divulge": "tell",
                "confess": "tell",
                "admit": "tell",
                "realize": "know",
                "grasp": "get",
                "enjoy": "like",
                "value": "like",
                "cherish": "love",
                "treasure": "love",
                "adore": "love",
                "admire": "like",
                "respect": "like",
                "esteem": "like",
                "honor": "respect",
                "revere": "respect",
                "worship": "love",
                "idolize": "love",
                "glorify": "praise",
                "praise": "say good things",
                "compliment": "say good things",
                "flatter": "say good things",
                "encourage": "cheer up",
                "assist": "help",
                "aid": "help",
                "serve": "help",
                "benefit": "help",
                "profit": "help",
                "gain": "get",
                "earn": "get",
                "win": "get",
                "complete": "finish",
                "cease": "stop",
                "halt": "stop",
                "pause": "stop",
                "suspend": "stop",
                "interrupt": "stop",
                "discontinue": "stop",
                "abandon": "give up",
                "desert": "leave",
                "forsake": "leave",
                "relinquish": "give up",
                "surrender": "give up",
                "yield": "give up",
                "submit": "give up",
                "concede": "give up"
            },
            "middle_school": {
                "artificial intelligence": "AI",
                "branch": "area",
                "computer science": "computer studies",
                "focuses on": "works on",
                "creating": "building",
                "machines": "systems",
                "capable of": "able to",
                "performing": "doing",
                "tasks": "jobs",
                "normally": "usually",
                "require": "need",
                "human intelligence": "human thinking",
                "understanding": "comprehending",
                "recognizing": "identifying",
                "patterns": "regular shapes",
                "solving": "resolving",
                "problems": "issues",
                "making decisions": "choosing",
                "recent years": "lately",
                "advances": "progress",
                "led to": "resulted in",
                "breakthroughs": "discoveries",
                "healthcare": "health care",
                "education": "learning",
                "transportation": "travel",
                "fields": "areas",
                "powerful": "effective",
                "tool": "resource",
                "shaping": "influencing",
                "future": "what's ahead",
                "utilize": "use",
                "facilitate": "help",
                "implement": "put into practice",
                "methodology": "method",
                "subsequently": "then",
                "consequently": "so",
                "nevertheless": "however",
                "furthermore": "also",
                "moreover": "also",
                "additionally": "also",
                "previously": "before",
                "approximately": "about",
                "demonstrate": "show",
                "indicate": "show",
                "illustrate": "show",
                "establish": "create",
                "maintain": "keep",
                "obtain": "get",
                "acquire": "get",
                "comprehend": "understand",
                "perceive": "see",
                "observe": "see",
                "examine": "look at",
                "investigate": "look into",
                "analyze": "study",
                "evaluate": "check",
                "assess": "check",
                "determine": "find out",
                "identify": "find",
                "recognize": "know",
                "acknowledge": "know",
                "appreciate": "like",
                "conceptualize": "think",
                "contemplate": "think about",
                "deliberate": "think about",
                "formulate": "create",
                "generate": "create",
                "initiate": "start",
                "originate": "start",
                "proceed": "continue",
                "terminate": "end",
                "conclude": "end",
                "finalize": "finish",
                "accomplish": "do",
                "achieve": "do",
                "attain": "reach",
                "secure": "get",
                "procure": "get",
                "retrieve": "get back",
                "accumulate": "gather",
                "assemble": "put together",
                "compile": "put together",
                "consolidate": "put together",
                "integrate": "put together",
                "synthesize": "put together",
                "coordinate": "organize",
                "orchestrate": "organize",
                "administer": "manage",
                "supervise": "oversee",
                "monitor": "watch",
                "regulate": "control",
                "moderate": "control",
                "optimize": "improve",
                "enhance": "improve",
                "improve": "make better",
                "augment": "add to",
                "supplement": "add to",
                "complement": "go with",
                "correspond": "match",
                "coincide": "match",
                "correlate": "go together",
                "interrelate": "go together",
                "interconnect": "connect",
                "synchronize": "time together",
                "harmonize": "go together",
                "reconcile": "make agree",
                "mediate": "help agree",
                "negotiate": "talk about",
                "collaborate": "work together",
                "cooperate": "work together",
                "participate": "take part",
                "contribute": "help",
                "enable": "allow",
                "empower": "allow",
                "authorize": "allow",
                "sanction": "allow",
                "endorse": "support",
                "advocate": "support",
                "promote": "support",
                "encourage": "support",
                "motivate": "encourage",
                "inspire": "encourage",
                "stimulate": "encourage",
                "provoke": "cause",
                "elicit": "get",
                "extract": "get",
                "derive": "get",
                "deduce": "figure out",
                "infer": "figure out",
                "postulate": "guess",
                "hypothesize": "guess",
                "speculate": "guess",
                "anticipate": "expect",
                "foresee": "see coming",
                "predict": "guess",
                "project": "guess",
                "estimate": "guess",
                "calculate": "figure out",
                "compute": "figure out",
                "ascertain": "find out",
                "verify": "check",
                "validate": "check",
                "confirm": "check",
                "substantiate": "prove",
                "corroborate": "prove",
                "authenticate": "prove real",
                "certify": "prove",
                "legitimize": "make legal",
                "institutionalize": "make official",
                "standardize": "make the same",
                "normalize": "make normal",
                "stabilize": "make steady",
                "streamline": "make smooth",
                "simplify": "make simple",
                "clarify": "make clear",
                "elucidate": "make clear",
                "illuminate": "make clear",
                "elaborate": "explain more",
                "expound": "explain more",
                "articulate": "say clearly",
                "verbalize": "say",
                "communicate": "tell",
                "convey": "tell",
                "transmit": "send",
                "disseminate": "spread",
                "propagate": "spread",
                "circulate": "spread",
                "distribute": "give out",
                "allocate": "give",
                "assign": "give",
                "designate": "pick",
                "nominate": "pick",
                "appoint": "pick",
                "label": "name",
                "categorize": "sort",
                "classify": "sort",
                "organize": "sort",
                "arrange": "put in order",
                "sequence": "put in order",
                "prioritize": "put first",
                "rank": "put in order",
                "evaluate": "judge",
                "assess": "judge",
                "appraise": "judge",
                "review": "look at",
                "scrutinize": "look closely",
                "explore": "look into",
                "research": "study",
                "study": "learn about",
                "inspect": "look at",
                "track": "follow",
                "trace": "follow",
                "pursue": "go after",
                "seek": "look for",
                "search": "look for",
                "discover": "find",
                "uncover": "find",
                "reveal": "show",
                "expose": "show",
                "disclose": "tell",
                "divulge": "tell",
                "confess": "tell",
                "admit": "tell",
                "realize": "know",
                "grasp": "get",
                "enjoy": "like",
                "value": "like",
                "cherish": "love",
                "treasure": "love",
                "adore": "love",
                "admire": "like",
                "respect": "like",
                "esteem": "like",
                "honor": "respect",
                "revere": "respect",
                "worship": "love",
                "idolize": "love",
                "glorify": "praise",
                "praise": "say good things",
                "compliment": "say good things",
                "flatter": "say good things",
                "encourage": "cheer up",
                "assist": "help",
                "aid": "help",
                "serve": "help",
                "benefit": "help",
                "profit": "help",
                "gain": "get",
                "earn": "get",
                "win": "get",
                "complete": "finish",
                "cease": "stop",
                "halt": "stop",
                "pause": "stop",
                "suspend": "stop",
                "interrupt": "stop",
                "discontinue": "stop",
                "abandon": "give up",
                "desert": "leave",
                "forsake": "leave",
                "relinquish": "give up",
                "surrender": "give up",
                "yield": "give up",
                "submit": "give up",
                "concede": "give up"
            },
            "high_school": {
                "artificial intelligence": "AI",
                "branch": "field",
                "computer science": "computer science",
                "focuses on": "focuses on",
                "creating": "developing",
                "machines": "systems",
                "capable of": "capable of",
                "performing": "executing",
                "tasks": "tasks",
                "normally": "typically",
                "require": "require",
                "human intelligence": "human intelligence",
                "understanding": "comprehending",
                "recognizing": "identifying",
                "patterns": "patterns",
                "solving": "resolving",
                "problems": "problems",
                "making decisions": "decision-making",
                "recent years": "recently",
                "advances": "advancements",
                "led to": "resulted in",
                "breakthroughs": "breakthroughs",
                "healthcare": "healthcare",
                "education": "education",
                "transportation": "transportation",
                "fields": "domains",
                "powerful": "powerful",
                "tool": "tool",
                "shaping": "influencing",
                "future": "future",
                "utilize": "use",
                "facilitate": "enable",
                "implement": "implement",
                "methodology": "methodology",
                "subsequently": "subsequently",
                "consequently": "consequently",
                "nevertheless": "nevertheless",
                "furthermore": "furthermore",
                "moreover": "moreover",
                "additionally": "additionally",
                "previously": "previously",
                "approximately": "approximately",
                "demonstrate": "demonstrate",
                "indicate": "indicate",
                "illustrate": "illustrate",
                "establish": "establish",
                "maintain": "maintain",
                "obtain": "obtain",
                "acquire": "acquire",
                "comprehend": "comprehend",
                "perceive": "perceive",
                "observe": "observe",
                "examine": "examine",
                "investigate": "investigate",
                "analyze": "analyze",
                "evaluate": "evaluate",
                "assess": "assess",
                "determine": "determine",
                "identify": "identify",
                "recognize": "recognize",
                "acknowledge": "acknowledge",
                "appreciate": "appreciate",
                "conceptualize": "conceptualize",
                "contemplate": "contemplate",
                "deliberate": "deliberate",
                "formulate": "formulate",
                "generate": "generate",
                "initiate": "initiate",
                "originate": "originate",
                "proceed": "proceed",
                "terminate": "terminate",
                "conclude": "conclude",
                "finalize": "finalize",
                "accomplish": "accomplish",
                "achieve": "achieve",
                "attain": "attain",
                "secure": "secure",
                "procure": "procure",
                "retrieve": "retrieve",
                "accumulate": "accumulate",
                "assemble": "assemble",
                "compile": "compile",
                "consolidate": "consolidate",
                "integrate": "integrate",
                "synthesize": "synthesize",
                "coordinate": "coordinate",
                "orchestrate": "orchestrate",
                "administer": "administer",
                "supervise": "supervise",
                "monitor": "monitor",
                "regulate": "regulate",
                "moderate": "moderate",
                "optimize": "optimize",
                "enhance": "enhance",
                "improve": "improve",
                "augment": "augment",
                "supplement": "supplement",
                "complement": "complement",
                "correspond": "correspond",
                "coincide": "coincide",
                "correlate": "correlate",
                "interrelate": "interrelate",
                "interconnect": "interconnect",
                "synchronize": "synchronize",
                "harmonize": "harmonize",
                "reconcile": "reconcile",
                "mediate": "mediate",
                "negotiate": "negotiate",
                "collaborate": "collaborate",
                "cooperate": "cooperate",
                "participate": "participate",
                "contribute": "contribute",
                "enable": "enable",
                "empower": "empower",
                "authorize": "authorize",
                "sanction": "sanction",
                "endorse": "endorse",
                "advocate": "advocate",
                "promote": "promote",
                "encourage": "encourage",
                "motivate": "motivate",
                "inspire": "inspire",
                "stimulate": "stimulate",
                "provoke": "provoke",
                "elicit": "elicit",
                "extract": "extract",
                "derive": "derive",
                "deduce": "deduce",
                "infer": "infer",
                "postulate": "postulate",
                "hypothesize": "hypothesize",
                "speculate": "speculate",
                "anticipate": "anticipate",
                "foresee": "foresee",
                "predict": "predict",
                "project": "project",
                "estimate": "estimate",
                "calculate": "calculate",
                "compute": "compute",
                "ascertain": "ascertain",
                "verify": "verify",
                "validate": "validate",
                "confirm": "confirm",
                "substantiate": "substantiate",
                "corroborate": "corroborate",
                "authenticate": "authenticate",
                "certify": "certify",
                "legitimize": "legitimize",
                "institutionalize": "institutionalize",
                "standardize": "standardize",
                "normalize": "normalize",
                "stabilize": "stabilize",
                "streamline": "streamline",
                "simplify": "simplify",
                "clarify": "clarify",
                "elucidate": "elucidate",
                "illuminate": "illuminate",
                "elaborate": "elaborate",
                "expound": "expound",
                "articulate": "articulate",
                "verbalize": "verbalize",
                "communicate": "communicate",
                "convey": "convey",
                "transmit": "transmit",
                "disseminate": "disseminate",
                "propagate": "propagate",
                "circulate": "circulate",
                "distribute": "distribute",
                "allocate": "allocate",
                "assign": "assign",
                "designate": "designate",
                "nominate": "nominate",
                "appoint": "appoint",
                "label": "label",
                "categorize": "categorize",
                "classify": "classify",
                "organize": "organize",
                "arrange": "arrange",
                "sequence": "sequence",
                "prioritize": "prioritize",
                "rank": "rank",
                "evaluate": "evaluate",
                "assess": "assess",
                "appraise": "appraise",
                "review": "review",
                "scrutinize": "scrutinize",
                "explore": "explore",
                "research": "research",
                "study": "study",
                "inspect": "inspect",
                "track": "track",
                "trace": "trace",
                "pursue": "pursue",
                "seek": "seek",
                "search": "search",
                "discover": "discover",
                "uncover": "uncover",
                "reveal": "reveal",
                "expose": "expose",
                "disclose": "disclose",
                "divulge": "divulge",
                "confess": "confess",
                "admit": "admit",
                "realize": "realize",
                "grasp": "grasp",
                "enjoy": "enjoy",
                "value": "value",
                "cherish": "cherish",
                "treasure": "treasure",
                "adore": "adore",
                "admire": "admire",
                "respect": "respect",
                "esteem": "esteem",
                "honor": "honor",
                "revere": "revere",
                "worship": "worship",
                "idolize": "idolize",
                "glorify": "glorify",
                "praise": "praise",
                "compliment": "compliment",
                "flatter": "flatter",
                "encourage": "encourage",
                "assist": "assist",
                "aid": "aid",
                "serve": "serve",
                "benefit": "benefit",
                "profit": "profit",
                "gain": "gain",
                "earn": "earn",
                "win": "win",
                "complete": "complete",
                "cease": "cease",
                "halt": "halt",
                "pause": "pause",
                "suspend": "suspend",
                "interrupt": "interrupt",
                "discontinue": "discontinue",
                "abandon": "abandon",
                "desert": "desert",
                "forsake": "forsake",
                "relinquish": "relinquish",
                "surrender": "surrender",
                "yield": "yield",
                "submit": "submit",
                "concede": "concede"
            },
            "college": {
                # College level keeps most original vocabulary
                "artificial intelligence": "artificial intelligence",
                "branch": "branch",
                "computer science": "computer science",
                "focuses on": "focuses on",
                "creating": "creating",
                "machines": "machines",
                "capable of": "capable of",
                "performing": "performing",
                "tasks": "tasks",
                "normally": "normally",
                "require": "require",
                "human intelligence": "human intelligence",
                "understanding": "understanding",
                "recognizing": "recognizing",
                "patterns": "patterns",
                "solving": "solving",
                "problems": "problems",
                "making decisions": "decision-making",
                "recent years": "recent years",
                "advances": "advances",
                "led to": "led to",
                "breakthroughs": "breakthroughs",
                "healthcare": "healthcare",
                "education": "education",
                "transportation": "transportation",
                "fields": "fields",
                "powerful": "powerful",
                "tool": "tool",
                "shaping": "shaping",
                "future": "future"
            }
        }
        
    async def simplify(self, text: str, target_level: str, preserve_meaning: bool) -> str:
        await asyncio.sleep(0.5)  # Simulate API call delay
        
        # Get the appropriate vocabulary map for the target level
        vocab_map = self.vocabulary_map.get(target_level, self.vocabulary_map["middle_school"])
        
        # Start with the original text
        simplified_text = text
        
        # Replace vocabulary based on reading level
        for complex_word, simple_word in vocab_map.items():
            # Use word boundaries to avoid partial replacements
            pattern = r'\b' + re.escape(complex_word) + r'\b'
            simplified_text = re.sub(pattern, simple_word, simplified_text, flags=re.IGNORECASE)
        
        # Clean up the text to ensure proper sentence structure
        simplified_text = self._clean_text(simplified_text)
        
        return simplified_text
    
    def _clean_text(self, text: str) -> str:
        # Fix common punctuation issues
        text = re.sub(r'\s+', ' ', text)  # Remove extra whitespace
        text = re.sub(r'\s+([.,!?])', r'\1', text)  # Fix spacing before punctuation
        text = re.sub(r'([.,!?])\s*([.,!?])', r'\1', text)  # Remove duplicate punctuation
        
        # Ensure proper sentence endings
        if not text.endswith(('.', '!', '?')):
            text = text.rstrip() + '.'
        
        # Fix capitalization
        sentences = text.split('. ')
        cleaned_sentences = []
        
        for i, sentence in enumerate(sentences):
            if sentence.strip():
                # Capitalize first letter of each sentence
                sentence = sentence.strip()
                if sentence and sentence[0].islower():
                    sentence = sentence[0].upper() + sentence[1:]
                cleaned_sentences.append(sentence)
        
        return '. '.join(cleaned_sentences)
    
    def calculate_readability(self, text: str) -> float:
        try:
            words = text.split()
            sentences = [s for s in text.split('.') if s.strip()]
            syllables = self._count_syllables(text)
            
            if len(words) == 0 or len(sentences) == 0:
                return 0.0
            
            avg_sentence_length = len(words) / len(sentences)
            avg_syllables_per_word = syllables / len(words)
            
            score = 206.835 - (1.015 * avg_sentence_length) - (84.6 * avg_syllables_per_word)
            return max(0.0, min(100.0, score))
        except:
            return 0.0
    
    def _count_syllables(self, text: str) -> int:
        text = text.lower()
        count = 0
        vowels = 'aeiouy'
        on_vowel = False
        
        for char in text:
            is_vowel = char in vowels
            if is_vowel and not on_vowel:
                count += 1
            on_vowel = is_vowel
        
        return max(1, count)

# Initialize FastAPI app
load_dotenv()
app = FastAPI(
    title="AI-Based Accessibility Enhancer (Fluent Mode)", 
    description="Convert educational content into accessible formats using fluent text simplification", 
    version="1.0.0"
)

app.add_middleware(
    CORSMiddleware, 
    allow_origins=["http://localhost:3000", "http://localhost:8000"], 
    allow_credentials=True, 
    allow_methods=["*"], 
    allow_headers=["*"]
)

# Initialize the text simplifier
text_simplifier = FluentTextSimplifier()
print("🚀 Fluent text simplifier initialized successfully")

@app.get("/")
async def root():
    return {
        "message": "AI-Based Accessibility Enhancer API (Fluent Mode)",
        "status": "running",
        "text_simplifier": "available",
        "note": "This version produces fluent, grammatically correct sentences with appropriate vocabulary for each reading level"
    }

@app.get("/health")
async def health_check():
    return {
        "status": "healthy",
        "services": ["text_simplifier"],
        "mode": "fluent_simplification",
        "openai_configured": False
    }

@app.post("/simplify-text", response_model=TextSimplificationResponse)
async def simplify_text(request: TextSimplificationRequest):
    try:
        print(f"📥 Received simplification request for {request.target_level} level")
        print(f"📝 Text: {request.text[:100]}{'...' if len(request.text) > 100 else ''}")
        
        simplified_text = await text_simplifier.simplify(
            request.text, 
            request.target_level, 
            request.preserve_meaning
        )
        
        readability_score = text_simplifier.calculate_readability(simplified_text)
        
        print(f"✅ Simplification successful. Readability score: {readability_score:.1f}")
        print(f"📝 Original: {request.text[:50]}...")
        print(f"📝 Simplified: {simplified_text[:50]}...")
        
        return TextSimplificationResponse(
            original_text=request.text,
            simplified_text=simplified_text,
            readability_score=readability_score,
            success=True
        )
        
    except Exception as e:
        error_msg = f"Text simplification failed: {str(e)}"
        print(f"❌ {error_msg}")
        
        return TextSimplificationResponse(
            original_text=request.text,
            simplified_text="",
            readability_score=0.0,
            success=False,
            error_message=error_msg
        )

if __name__ == "__main__":
    print("🚀 Starting AI-Based Accessibility Enhancer (Fluent Mode)")
    print("📍 Backend will be available at: http://localhost:8000")
    print("📚 API Documentation at: http://localhost:8000/docs")
    print("🔧 This version produces FLUENT, grammatically correct sentences")
    print("💡 Features: vocabulary replacement, proper punctuation, sentence structure")
    
    uvicorn.run(app, host="0.0.0.0", port=8000)
